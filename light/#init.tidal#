import Sound.Tidal.Light

lightServer "/dev/ttyUSB0"

l1 <- lightStream
l2 <- lightStream
l3 <- lightStream
l4 <- lightStream

let x1 p = d1 p >> l1 p
    x2 p = d2 p >> l2 p
    x3 p = d3 p >> l3 p
    x4 p = d4 p >> l4 p
    hush = mapM_ ($ silence) [d1,d2,d3,d4,d5,d6,d7,d8,d9,x1,x2,x3,x4]

x1 $ chunk 4 (hurry 2) $ jux rev $ chop 16 $ sound "bd(3,8) cp supermandolin:5 ~"

d1 $ n ("c6 a7") # sound "supermandolin"
   # sustain 2

d1 $ n "f a c e" # sound "supermandolin"

l1 $ sound "red"

d1 $ sound "bd sn:2"

d1 $ sound "bd sn"

d1 $ n "f a c e" # sound "supermandolin"
d1 $ sound "bd sn"

d1 $ n "f a c e" # sound "supermandolin"
   # shape 0.3
   
import qualified Data.ByteString.Char8 as B
import qualified System.Hardware.Serialport as SP
output <- SP.openSerial "/dev/ttyUSB0" (SP.defaultSerialSettings {SP.commSpeed = SP.CS115200})

SP.send output $ B.pack $ ("1 1 1") ++ "\r"
