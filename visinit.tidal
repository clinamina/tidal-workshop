import Sound.Tidal.Vis
import qualified Graphics.Rendering.Cairo as C
import Data.Colour
import Data.Colour.Names
import Data.Colour.SRGB
import System.Cmd

let vis name pat = vLines (C.withSVGSurface) (name ++ ".svg") (600,50) pat 1 1

vis "test" $ "red blue"



import Sound.Tidal.Vis
import Sound.OSC.FD
import Control.Concurrent.MVar
import Data.Maybe
import System.IO.Unsafe

import qualified Graphics.Rendering.Cairo as C
import Data.Colour
import Data.Colour.Names
import Data.Colour.SRGB

import Sound.Tidal.Vis2
import System.Cmd

let v name p = do vis (name) p
                  rawSystem "/home/alex/Dropbox/bin/fixsvg.pl" [name ++ ".svg"]
                  rawSystem "convert" [name ++ ".svg", name ++ ".pdf"]
                  return ()
    blend' :: Pattern ColourD -> Pattern ColourD -> Pattern ColourD
    blend' a b = blend 0.5 <$> b <*> a


v "subpattern1" $
  "{purple yellow, red blue orange}"


v "subpattern1" $
  "tomato*8"

d1 $ loopAt 1 $ sound "arc"

d1 $ sound "arc"
  # speed 2.45


d1 $ sound "bd sd ~ bd drum:2 ~ ~ arpy"

d1 $ silence

d1 $ sound "bd sd [~ bd] sd"

fast 4 $ iter 4 "black blue lightblue white"

v "hello" $ "red"

now

let v1 = v "/home/alex/SparkleShare/tidal-workshop/vis"
